# -*- coding: utf-8 -*-
"""TSF task 1; Supervised ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1szAGD1zeRDLfInNkPugbUYb6RdJpdF9G
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

url = "https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
df = pd.read_csv(url)
df

#plotting data
df.plot(x='Hours', y='Scores', style='o')  
plt.title('Hours vs Percentage')  
plt.xlabel('Hours Studied')  
plt.ylabel('Percentage Score')  
plt.show()

"""Dividing the data into "attributes" (inputs) and "labels" (outputs)."""

#df.iloc[:, :-1] means until the last column/ values() stores values in form of array
x = df.iloc[:, :-1].values
y = df.iloc[:, 1].values

"""Split training and test data"""

from sklearn.model_selection import train_test_split  
x_train, x_test, y_train, y_test = train_test_split(x, y, 
                            test_size=0.2, random_state=0)

"""Let's train our model now, we'll use linear regression model"""

from sklearn.linear_model import LinearRegression  
reg = LinearRegression()  
reg.fit(x_train, y_train)

# Plotting the regression line
line = reg.coef_*x+reg.intercept_ #y=mx+c

# Plotting for the test data
plt.scatter(x, y)
plt.plot(x, line);
plt.show()

"""Predicting values."""

pScores = reg.predict(x_test)
pScores

# Comparing Actual vs Predicted
df = pd.DataFrame({'Actual': y_test, 'Predicted': pScores})  
df

hours=5.5
predictions = reg.predict(np.array(hours).reshape(1, 1))
print("Hours = {}".format(hours))
print("Predicted Score = {}".format(predictions[0]))

"""Evaluating the model"""

from sklearn import metrics  
print('Mean Absolute Error:', 
      metrics.mean_absolute_error(y_test, pScores))